pipeline {
    agent any

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'tblandford/lfd261-result:v1'
                    args '-p 3000:3000'
                }
            }
            when {
                changeset "**/result/**"
            }
            steps {
                echo 'Build result app'
                dir('result'){
                    sh 'npm install'
                }
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'tblandford/lfd261-result:v1'
                    args '-p 3000:3000'
                }
            }
            when {
                changeset "**/result/**"
            }
            steps {
                echo 'Running Unit Tests on result app'
                dir('result'){
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }
        stage('Docker-Package') {
            agent any
            // when {
            //     branch 'master'
            //     changeset "**/worker/**"
            // }
            steps {
                echo 'Packaging worker app with docker'
                script {
                    docker.withRegistry('https://registry.hub.docker.com',, 'dockerlogin') {
                        def workerImage = docker.build("tblandford/lfd261-result:v${env.BUILD_ID}", './result')
                        workerImage.push()
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Build pipeline for result is complete'
        }
        success {
            slackSend (channel: "instavote-cd", message: "Build success - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|open>)")
        }
        failure {
            slackSend (channel: "instavote-cd", message: "Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|open>)")
        }
    }
}
