pipeline {
    agent none

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'tblandford/lfd261-vote:v1'
                    args '-u root --privileged'
                }
            }
            when {
                changeset "**/vote/**"
            }
            steps {
                echo 'Build vote app'
                dir('vote'){
                    sh 'pip list'
                }
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'tblandford/lfd261-vote:v1'
                    args '-u root --privileged'
                }
            }
            when {
                changeset "**/vote/**"
            }
            steps {
                echo 'Running Unit Tests on vote app'
                dir('vote'){
                    // sh 'pip install -r requirements.txt'
                    sh 'nosetests -v'
                }
            }
        }
        stage('Docker-Package') {
            agent any
            when {
            //     branch 'master'
                changeset "**/vote/**"
            }
            steps {
                echo 'Packaging worker app with docker'
                script {
                    docker.withRegistry('https://registry.hub.docker.com',, 'dockerlogin') {
                        def workerImage = docker.build("tblandford/lfd261-vote:v${env.BUILD_ID}", './vote')
                        workerImage.push()
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Build pipeline for vote is complete'
        }
        success {
            slackSend (channel: "instavote-cd", message: "Build success - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|open>)")
        }
        failure {
            slackSend (channel: "instavote-cd", message: "Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|open>)")
        }
    }
}
